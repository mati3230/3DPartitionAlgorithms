
##############################
### Find required packages ###
##############################
#find_package(PythonLibs)
#find_package(PythonInterp)
#include(FindNumPy)
include_directories(../include)

find_package(OpenMP)
if (${OpenMP_CXX_FOUND})
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    add_definitions(-DOPENMP)
endif()

#find_package(Boost 1.65.0 COMPONENTS graph REQUIRED) #system filesystem thread serialization
#if (${Boost_MINOR_VERSION} LESS 67 )
#    find_package(Boost 1.65.0 COMPONENTS numpy${PYTHON_VERSION_MAJOR} REQUIRED) #system filesystem thread serialization
#else()
#    set(PYTHONVERSION ${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR})
#    find_package(Boost 1.67.0 COMPONENTS numpy${PYTHONVERSION} REQUIRED)
#endif()
include_directories(${Boost_INCLUDE_DIRS})
link_directories(${Boost_LIBRARY_DIRS})
message("Boost includes ARE " ${Boost_INCLUDE_DIRS})
message("Boost libraries dirs ARE " ${Boost_LIBRARY_DIRS})
message("Python Major Verion is " ${PYTHON_MAJOR_VER})
message("Python Minor Verion is " ${PYTHON_MINOR_VER})
set(Boost_LIBRARIES ${Boost_LIBRARY_DIRS}/libboost_python${PYTHON_MAJOR_VER}${PYTHON_MINOR_VER}.so ${Boost_LIBRARY_DIRS}/libboost_numpy${PYTHON_MAJOR_VER}${PYTHON_MINOR_VER}.so ${Boost_LIBRARY_DIRS}/libboost_system.so ${Boost_LIBRARY_DIRS}/libboost_filesystem.so ${Boost_LIBRARY_DIRS}/libboost_thread.so ${Boost_LIBRARY_DIRS}/libboost_serialization.so)
message("Boost libraries ARE " ${Boost_LIBRARIES})



message("PYTHON LIBRARIES ARE " ${PYTHON_LIBRARIES})


INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_DIRS} ${PYTHON_NUMPY_INCLUDE_DIR})
LINK_DIRECTORIES(${PYTHON_LIBRARY_DIRS})

file(GLOB CP_HEADERS include/*.h)

set(CMAKE_LD_FLAG "${CMAKE_LD_FLAGS} -shared -Wl -fPIC --export-dynamic -o -O3 -Wall")
message(${Boost_LIBRARIES})
add_library(cp SHARED cutpursuit.cpp ${CP_HEADERS})
target_link_libraries(cp
    ${Boost_LIBRARIES}
    ${PYTHON_LIBRARIES})